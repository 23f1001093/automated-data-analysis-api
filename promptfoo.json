{
  "description": "Generic Data/ML/Agent Evaluation â€“ reusable template",
  "providers": [
    {
      "id": "https",
      "config": {
        "url": "https://your-api-endpoint.com/api/",
        "method": "POST",
        "body": "file://questions.txt",
        "transformResponse": "json"
      }
    }
  ],
  "assert": [
    {
      "type": "is-json",
      "value": {"type": ["array", "object"]},
      "weight": 0
    },
    {
      "type": "python",
      "weight": 3,
      "value": "import json\noutput = json.loads(output)\nprint(output is not None)"
    },
    {
      "type": "python",
      "weight": 3,
      "value": "import json\noutput = json.loads(output)\n# Check first element exists for array outputs\nprint((isinstance(output, list) and len(output) > 0) or isinstance(output, dict))"
    },
    {
      "type": "python",
      "weight": 3,
      "value": "import json\noutput = json.loads(output)\n# Optional: numeric check for first element if array\nif isinstance(output, list): print(isinstance(output[0], (int,float)))\nelse: print(True)"
    },
    {
      "type": "llm-rubric",
      "provider": "openai:gpt-4.1-nano",
      "weight": 5,
      "preprocess": "import json\noutput=json.loads(output)\n# if your JSON has images, put the first image base64 into context\ndef extract_image(d):\n  if isinstance(d, list) and len(d) > 3:\n    return d[3]\n  elif isinstance(d, dict) and 'image' in d:\n    return d['image']\n  return None\ncontext['image'] = extract_image(output)",
      "rubricPrompt": "[\n  {\"role\":\"system\",\"content\":\"Grade the visual output. Score 1 only if the image is valid, visible, and meets basic criteria. Respond JSON {valid:bool,score:number}\"},\n  {\"role\":\"user\",\"content\":[{\"type\":\"image_url\",\"image_url\":{\"url\":\"{{image}}\"}}, {\"type\":\"text\",\"text\":\"Review the task and JSON output.\"}]}\n]",
      "threshold": 0.99
    }
  ],
  "tests": [
    {
      "description": "Generic evaluation template"
    }
  ]
}